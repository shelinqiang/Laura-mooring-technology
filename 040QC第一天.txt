QC quality center 是HP公司的产品。



QC是一个基于web的测试管理工具，是一个重软件，是一个集大成者。 顾炎武。



用例管理工具：testlink

缺陷管理工具：bugfree、禅道、mantis

配置管理工具：svn。svn最大的优势是对代码的管理。（乐观锁）



pc端：自动化测试工具：QTP、selenium
      性能测试工具：LR

手机：appium、monkeyrunner

--------------------------------

为什么要使用QC？

  QC是一个基于web的测试管理工具，可以组织和管理应用程序测试的所有阶段，包括需求、测试计划、测试执行和缺陷管理。




QC是如何达到保证质量目的？


   QC将一个项目的周期细分为各个模块，并把各个模块统一到同一个平台上来，通过模块和模块之间的关联来控制项目测试流程的执行。因为测试的执行者和监督者在同一个平台，所以能方便沟通提高效率。


-------------------------------
QC的组成：

1.工作模块（前台）
  1>release 
  2>requirement
  3>test plan
  4>test lab
  5>defects
  

2.站点管理（后台）
  siteAdministrator


-------------------------------

案例一：站点管理（后台）

 1.能够创建项目域（Domain）

  项目域相当于大公司里的研发部门。ATT公司有三个研发部门：RD1，RD2，RD3。每一个部门就相当于一个项目域。

 

 2.创建项目
 
 3.创建用户

 4.能够设置管理员


------------------------------
案例二：  release 模块


release模块：进行版本周期管理。用作开发过程中多个版本测试管理。


release版本-----发布版本

debug版本-------调试版本 

                 
                 release模块流转图
                         |
                     指定需求
                         |
                  编写并运行测试集
                         |
                      提交bug
                         |
                 分析release和cycle




------------------------------
QA与软件测试：


QA与软件测试时两码事。

QA（Quality Assurace）即质量保证，包括各行各业。例如：制造业、食品行业、航天行业。


我们通常所说的QA其实是指SQA（Sorfware Quality Assurace）即软件行业的质量保证。

SQA与软件测试的区别：


1.SQA偏重质量体系的建立和维护，而软件测试时针对产品质量本身进行测试。

2.软件测试和软件开发一样是一个单纯的技术活，而SQA本身不涉及具体的技术。

3.软件测试针对的是具体软件，找到具体软件的缺陷而SQA是一个过程控制，是对整个过程的监督和改进。


-------------------------------

需求：
运维：
QA：
测试：
开发：
产品经理：

-----------------------------------------


案例三：requirement 模块：组要是针对项目需求管理：


该模块的流转图：
                   创建需求
                      |
                  详细化需求
                      |
                  指定release
                      |
                  分析需求


需求：

Direct Cover status 被用例覆盖状态

reviewed  是否评审过

target cycle 目标轮次

target release 目标版本


-------------------------------
              
需求关联需求：

1.能否关联？ 能

2.为什么要关联？

 一旦某一个需求变化，关联后妩媚就能很快知道其他哪些需求还需要进行同步变更，这样就能及时通知相关人员进行修改。

3.怎么关联？

  进入需求----requirements traceability


trace from：本需求受其他需求影响

trace to：本需求影响其他需求


--------------------------------
案例四：test plan 模块

该模块就是对测试过程中产生的用例进行管理的模块。在此模块可以实现新建、修改、删除、导入、导出测试用例的功能。

       该模块的流转图：
                       设计测试策略
                             |
                       设计测试主题
                             |
                       设计测试用例
                             |
                       创建需求覆盖
                             |
                       定义测试步骤
                             |
                        自动化测试
                             |
                       分析测试计划
-------------------------------------------

什么是测试用例？TC  test case

测试用例有什么用？

没有测试用例行不行？

测试用例有哪些要素？

什么样的用例是好的用例？

----------------------------------------------

创建任何用例都需要如下步骤：
1.先搭框架
2.填写详细的测试用例（标题、步骤、预期结果）


---------------------------------------------

在QC创建用例有两种方法：
方法一：直接新建测试用例


1.test type
 
  manual：手工测试
  WR：由winrunner实行的一种测试。WR是一种企业级功能测试工具。
  LR：性能测试工具
  QTP：自动化测试工具

2.参数化用例。针对同样的功能或者操作需要不同的数据，此时妩媚可以选择参数化。参数化的目的是为了让测试用例功能更为强大。

3.设置测试用例模板。（模板主要是用来调用的，当然不设置模板也可以调用。）

4.调用（引用）call to test 类似于c语言中的函数调用。


5.对测试用例文件夹排序


---------------------------------
方法二：通过需求导入

1.把最底层的需求转换成为测试用例的步骤。（多个需求对应一个用例时选择）
2.把最底层的需求转换成为测试用例。      （一个需求对用一个用例时选择）
3.把全部需求转换成为主题。              （ 一个需求对用多个用例时选择）




---------------------------------


学习QC的用处？



---------------------------------









